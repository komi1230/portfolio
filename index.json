[{"body":"Process input data in front end Material-UI is reallly convenient package for non-designer because programmer can easily make awesome design. And Material-UI has a variety of components, which are easy-to-custommize.\n To get data from user\u0026rsquo;s input, in normal HTML, we use \u0026lt;input\u0026gt; tag. But we have to store data into some variable to process data with JavaScript.\nIn practice You can easily make simple page with Textfield.\nimport React from \u0026#39;react\u0026#39;; import TextField from \u0026#39;@material-ui/core/TextField\u0026#39;; export default function OurForm() { return ( \u0026lt;TextField label=\u0026#34;Label\u0026#34; /\u0026gt; ); } And UI is like this.","categories":["Tech"],"date":1600214400,"description":"Material-UI is a very good package to construct UI easily in React. This article provides how to get data from input form.","permalink":"http://komi.dev/post/2020-09-16-material-ui-textfield-var/","publishdate":"2020-09-16T00:00:00Z","section":"post","tags":["React"],"title":"How to get data from Textfield of Material-UI","url":"/post/2020-09-16-material-ui-textfield-var/"},{"body":"","categories":null,"date":1600214400,"description":"","permalink":"http://komi.dev/post/","publishdate":"0001-01-01T00:00:00Z","section":"post","tags":null,"title":"Posts","url":"/post/"},{"body":"Global variable in Rust In functional programming, the way to use global variable properly is just to avoid using it. This is not a joke. Modern software engineering requires variables to be scoped, and at the same time, they shouldn\u0026rsquo;t be changed even in scopes such as closures.\nHowever, we can\u0026rsquo;t sometimes avoid using global variable (Somtimes codes can be cleaner.) For such situations, Rust provides some syntax to controll global variables.","categories":["Tech"],"date":1599868800,"description":"Rust provides some syntax to allocate data to be able to be accessed globally. This article tells when you use properly.","permalink":"http://komi.dev/post/2020-09-12-when-to-use-lazy_static/","publishdate":"2020-09-12T00:00:00Z","section":"post","tags":["Rust"],"title":"const and static in Rust","url":"/post/2020-09-12-when-to-use-lazy_static/"},{"body":"Do you know Emacs? Today there are many editors. The most popular one seems Visual Stadio Code. Nobody can complain about this fact. And the second one may be Vim. Nobody can also complain about this.\nBut\u0026hellip;Well\u0026hellip; By the say, do you know Emacs?\nEmacs is a kind of editors and has so long history. Today, a few people use this. I\u0026rsquo;m not sure why Emacs is not popular because I think this is really customizable and light-weighted.","categories":["Tech"],"date":1599436800,"description":"Emacs has old years but today it is considered to be ancient weapon. Here I'll modify it.","permalink":"http://komi.dev/post/2020-09-07-modernize-emacs/","publishdate":"2020-09-07T00:00:00Z","section":"post","tags":["Emacs"],"title":"Modernize Emacs","url":"/post/2020-09-07-modernize-emacs/"},{"body":"About WebAssembly First of all, you have to understand what WebAssembly is.\nMozilla says \u0026hellip;\n WebAssembly is a new type of code that can be run in modern web browsers â€” it is a low-level assembly-like language with a compact binary format that runs with near-native performance and provides languages such as C/C++, C# and Rust with a compilation target so that they can run on the web. It is also designed to run alongside JavaScript, allowing both to work together.","categories":["Tech"],"date":1599350400,"description":"There are many tools around WebAssembly, and they are a bit complicated. Here you can find some clue to develop application using WebAssembly.","permalink":"http://komi.dev/post/2020-09-06-ecosystems-of-wasm/","publishdate":"2020-09-06T00:00:00Z","section":"post","tags":["Rust","WebAssembly"],"title":"Tools and Ecosystem of WebAssembly with Rust","url":"/post/2020-09-06-ecosystems-of-wasm/"},{"body":"About me Hello, my name is Yusuke Kominami. I\u0026rsquo;m living in Japan, and working as a machine learning engineer. I\u0026rsquo;m 23 years old and graguated from Kyoto University in this March. When I was student, I majored in Bioinformatics. Why am I a software engineer? Actually, I\u0026rsquo;m not interested in Biology, more interested in computing. So when I was in university, I just stuck on programming. For more about me,","categories":["Tech"],"date":1599264000,"description":"Inroduce myself and how to build this blog with Zola and GitHub Actions.","permalink":"http://komi.dev/post/2020-09-05-make-blog/","publishdate":"2020-09-05T00:00:00Z","section":"post","tags":["zsh","GitHub","GitHub Actions","GitHub Pages"],"title":"Hello My New Blog","url":"/post/2020-09-05-make-blog/"}]